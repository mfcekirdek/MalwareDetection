from RegistryFeatureExtractor import RegistryFeatureExtractor
from FileSystemFeatureExtractor import FileSystemFeatureExtractor
from NetworkFeatureExtractor import NetworkFeatureExtractor
from SystemCallFeatureExtractor import SystemCallFeatureExtractor
from MiscFeatureExtractor import MiscFeatureExtractor
import json
import os

class DynamicFeatureExtractor:
    def __init__(self,pcap_sample,json_report_path):

        self.data = json.load(open(json_report_path))

        self.extractors = {"registryExtractor": RegistryFeatureExtractor(json_report_path),
                           "fileSystemExtractor": FileSystemFeatureExtractor(json_report_path),
                           "networkExtractor": NetworkFeatureExtractor(pcap_sample,json_report_path),
                           "systemCallExtractor": SystemCallFeatureExtractor(json_report_path),
                           "miscExtractor": MiscFeatureExtractor(json_report_path)}

    def extract_features(self):
        for extractor in self.extractors.values():
            extractor.extract_features()

    def dumpExtractedDataToFile(self,file='../extracted_features.json'):
        out_data = {}
        for extractorName,extractorObject in self.extractors.items():
            out_data[extractorName] = extractorObject.extracted_data

        #print out_data

        with open(file, 'w') as outfile:
            json.dump(out_data, outfile,indent=4)

if __name__ == '__main__':
    # pcap_sample = "../dump.pcap"
    # report_path = "../report_305.json"
    # extractor = DynamicFeatureExtractor(pcap_sample,report_path)
    # extractor.extract_features()
    # extractor.dumpExtractedDataToFile()

    dir = "/home/fatihc/MachineLearning/MalwareDetectionWithAI/data/ReportAndPcap/Benign"
    outDir = "/home/fatihc/MachineLearning/MalwareDetectionWithAI/data/extractedfeatures/dynamic/Benign"

    # dir = "/home/fatihc/MachineLearning/MalwareDetectionWithAI/data/ReportAndPcap/Malicious"
    # outDir = "/home/fatihc/MachineLearning/MalwareDetectionWithAI/data/extractedfeatures/dynamic/Malicious"


    for file in os.listdir(dir):
        if file.endswith(".json"):
            report_path = os.path.join(dir, file)
            pcap_sample = report_path.split("_report.json")[0] + "_dump.pcap"

            outReportPath = os.path.join(outDir,"Extracted_"+file)
            if os.path.isfile(outReportPath):
                print "This report is already extracted: " , outReportPath
            else:
                print "Extracting report: " , outReportPath
                print(report_path)
                print(pcap_sample)

                extractor = DynamicFeatureExtractor(pcap_sample,report_path)
                extractor.extract_features()
                extractor.dumpExtractedDataToFile(os.path.join(outDir,"Extracted_"+file))



