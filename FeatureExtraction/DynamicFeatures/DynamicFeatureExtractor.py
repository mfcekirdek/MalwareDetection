from RegistryFeatureExtractor import RegistryFeatureExtractor
from FileSystemFeatureExtractor import FileSystemFeatureExtractor
from NetworkFeatureExtractor import NetworkFeatureExtractor
from SystemCallFeatureExtractor import SystemCallFeatureExtractor
from MiscFeatureExtractor import MiscFeatureExtractor
import json

class DynamicFeatureExtractor:
    def __init__(self,pcap_sample,json_report_path):

        self.data = json.load(open(json_report_path))

        self.extractors = {"registryExtractor": RegistryFeatureExtractor(json_report_path),
                           "fileSystemExtractor": FileSystemFeatureExtractor(json_report_path),
                           "networkExtractor": NetworkFeatureExtractor(pcap_sample,json_report_path),
                           "systemCallExtractor": SystemCallFeatureExtractor(json_report_path),
                           "miscExtractor": MiscFeatureExtractor(json_report_path)}

    def extract_features(self):
        for extractor in self.extractors.values():
            extractor.extract_features()

    def dumpExtractedDataToFile(self,file='../extracted_features.json'):
        out_data = {}
        for extractorName,extractorObject in self.extractors.items():
            out_data[extractorName] = extractorObject.extracted_data

        #print out_data

        with open(file, 'w') as outfile:
            json.dump(out_data, outfile,indent=4)

pcap_sample = "../dump.pcap"
report_path = "../report_305.json"
extractor = DynamicFeatureExtractor(pcap_sample,report_path)
extractor.extract_features()
extractor.dumpExtractedDataToFile()